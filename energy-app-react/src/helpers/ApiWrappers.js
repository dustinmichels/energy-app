// 1) For a given building, resource and timeframe, return (from API) a single value (e.g. gal/week in Burton)
// 2) Energy the windmill generated within a specified timeframe
// 3) Energy generated by solar panels within a specified timeframe
// 4) (eventually) Data over time to generate graphs


function getBuildingUsageOverTime(building, utility, timeStart, timeEnd) {
	/*
		parameter	| object type
		--------------------------
		'building'	| String 
		'utility'	| String (options for now: "electricity", "water")
		'timeStart' | Date
		'timeEnd'	| Date
	*/

	// Insert real API call here

	/* RETURN DUMMY DATA (below) */

	// different utilities have different "typical" amounts
	var scaleFactor;

	if (utility == "water") {
		scaleFactor = 400;
	} else if (utility == "electricity") {
		scaleFactor = 12; 
	} 

	// calculate number of 15-min chunks b/w 'timeStart' and 'timeEnd'
	var timeframe = Math.abs(timeEnd - timeStart) / (60000 * 15); // 60,000ms per min * 15min

	return Math.random() * scaleFactor * timeframe; 

}

function getEnergyGeneration(utility, timeStart, timeEnd) {
    // return value of how much electricity we are generating from wind/solar, etc
    // /api/generation
}

function getBuildingsList() {
    // return list of every building name with data (e.g. "Burton", "Sayles", etc.)
    // /api/buildings/names
}

function getBuildingUtilityConsumption(utility, building, timeStart, timeEnd) {
    // return value of how much of a resource we have consumed at one building over a time frame

}

function getCurrentBuildingUtilityConsumption(utility, building) {
    var diff = 15;  // 15 minutes
    var timeStart = Date.now();
    timeStart.setDate(timeStart.getTime() - diff*60000);
    return getBuildingUtilityConsumption(utility, building, timeStart, Date.Now());
}

function getUtilityConsumption(utility, timeStart, timeEnd) {
    // return total campus consumption of utitlity over specified time frame
}